// 将设置放入此文件中以覆盖默认值和用户设置。
{
    "files.defaultLanguage": "c", // ctrl+N新建文件后默认的语言

    // "c-cpp-flylint.cppcheck.enable": false,

    // "c-cpp-flylint.flexelint.enable": false,

    // "c-cpp-flylint.run": "onType", // 此选项貌似不起作用

    // "c-cpp-flylint.clang.includePaths": [
    //     "${workspaceRoot}",
    //     "D:/llvm/lib/gcc/x86_64-w64-mingw32/7.1.0/include/c++",
    //     "D:/llvm/lib/gcc/x86_64-w64-mingw32/7.1.0/include/c++/x86_64-w64-mingw32",
    //     "D:/llvm/lib/gcc/x86_64-w64-mingw32/7.1.0/include/c++/backward",
    //     "D:/llvm/lib/gcc/x86_64-w64-mingw32/7.1.0/include",
    //     "D:/llvm/include",
    //     "D:/llvm/x86_64-w64-mingw32/include",
    //     "D:/llvm/lib/gcc/x86_64-w64-mingw32/7.1.0/include-fixed"
    // ],

    // "c-cpp-flylint.clang.defines": [
    //     "_DEBUG",
    //     "UNICODE",
    //     "__GNUC__=7",
    //     "__cdecl=__attribute__((__cdecl__))"
    // ],

    // "c-cpp-flylint.standard": [ // 此选项貌似也不起作用
    //     "c11",
    //     "c++1z"
    // ],

    "code-runner.runInTerminal": true, // 设置成false会在“输出”中输出，无法交互

    "code-runner.executorMap": {
        //"c": "cd $dir && clang $fileName -o $fileNameWithoutExt.exe -Wall -g -Og -static-libgcc -fcolor-diagnostics --target=x86_64-w64-mingw -std=c11 && $dir$fileNameWithoutExt",
        //"cpp": "cd $dir && clang++ $fileName -o $fileNameWithoutExt.exe -Wall -g -Og -static-libgcc -fcolor-diagnostics --target=x86_64-w64-mingw -std=c++1z && $dir$fileNameWithoutExt"
        
        //chcp命令查看cmd的编码设置  (GBK2312 -> 936, UTF-8 -> 65001)   chcp 65001

        // // win10 设置
        "c": "cd $dir && clang $fileName -o ./build/$fileNameWithoutExt.exe -Wall -g -Og -static-libgcc -fcolor-diagnostics --target=x86_64-w64-mingw -std=c11 && ./build/$fileNameWithoutExt.exe",
        "cpp": "cd $dir && clang++ $fileName -o ./build/$fileNameWithoutExt.exe -Wall -g -Og -static-libgcc -fcolor-diagnostics --target=x86_64-w64-mingw -std=c++1z && ./build/$fileNameWithoutExt.exe"

        // // win7设置
        // "c": "cd $dir && clang $fileName -o ./build/$fileNameWithoutExt.exe -Wall -g -Og -static-libgcc -fcolor-diagnostics --target=x86_64-w64-mingw -std=c11 && $dir\\build\\$fileNameWithoutExt.exe",
        // "cpp": "cd $dir && clang++ $fileName -o ./build/$fileNameWithoutExt.exe -Wall -g -Og -static-libgcc -fcolor-diagnostics --target=x86_64-w64-mingw -std=c++1z && $dir\\build\\$fileNameWithoutExt.exe"
    },

    "code-runner.saveFileBeforeRun": true,

    "C_Cpp.clang_format_sortIncludes": true,

    "C_Cpp.errorSquiggles": "Disabled",
    "files.associations": {
        "*.tcc": "cpp",
        "cctype": "cpp",
        "clocale": "cpp",
        "cmath": "cpp",
        "cstdint": "cpp",
        "cstdio": "cpp",
        "cstdlib": "cpp",
        "cwchar": "cpp",
        "cwctype": "cpp",
        "exception": "cpp",
        "initializer_list": "cpp",
        "iosfwd": "cpp",
        "iostream": "cpp",
        "istream": "cpp",
        "limits": "cpp",
        "new": "cpp",
        "ostream": "cpp",
        "stdexcept": "cpp",
        "streambuf": "cpp",
        "string_view": "cpp",
        "system_error": "cpp",
        "type_traits": "cpp",
        "typeinfo": "cpp",
        "vector": "cpp",
        "array": "cpp",
        "atomic": "cpp",
        "cstdarg": "cpp",
        "cstddef": "cpp",
        "deque": "cpp",
        "list": "cpp",
        "unordered_map": "cpp",
        "algorithm": "cpp",
        "functional": "cpp",
        "iterator": "cpp",
        "map": "cpp",
        "memory": "cpp",
        "memory_resource": "cpp",
        "numeric": "cpp",
        "optional": "cpp",
        "string": "cpp",
        "tuple": "cpp",
        "utility": "cpp",
        "fstream": "cpp",
        "sstream": "cpp",
        "cstring": "cpp"
    }
}
